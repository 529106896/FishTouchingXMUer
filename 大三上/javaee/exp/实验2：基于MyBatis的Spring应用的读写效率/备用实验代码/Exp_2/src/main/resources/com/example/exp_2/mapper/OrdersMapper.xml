<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.exp_2.mapper.OrdersMapper">
    <!--完善1.namespace 2.sql语句的id和resultType-->

    <insert id="createOrders" parameterType="OrdersPo" keyProperty="id" useGeneratedKeys="true">
        insert into orders
        (consignee, region_id, address, mobile, message, coupon_id, presale_id, groupon_id, gmt_create, gmt_modified, state)
        VALUES(#{consignee},#{regionId},#{address},#{mobile},#{message},#{couponId},#{presaleId},#{grouponId},CURRENT_TIMESTAMP,CURRENT_TIMESTAMP,0)
    </insert>

    <insert id="createOrderItem" parameterType="OrderItemPo" keyProperty="id" useGeneratedKeys="true">
        insert into order_item
        (goods_sku_id, quantity, coupon_activity_id, order_id, price, gmt_create, gmt_modified)
        VALUES(#{goodsSkuId},#{quantity},#{couponActivityId},#{orderId},#{price},CURRENT_TIMESTAMP,CURRENT_TIMESTAMP)
    </insert>

    <select id="findOrders" parameterType="OrdersPo" resultMap="OrdersWithItemMap">
        select
        os.id as id,
        os.order_sn,
        os.order_type,
        os.state,
        os.substate,
        os.gmt_create,
        os.gmt_modified,
        os.confirm_time,
        os.origin_price,
        os.discount_price,
        os.freight_price,
        os.rebate_num,
        os.message,
        os.region_id,
        os.address,
        os.mobile,
        os.consignee,
        os.coupon_id,
        os.groupon_id,
        os.presale_id,
        os.shipment_sn,
        oi.id as order_item_id,
        oi.goods_sku_id as order_item_goods_sku_id,
        oi.order_id as order_item_order_id,
        oi.quantity as order_item_quantity,
        oi.price as order_item_price,
        oi.discount as order_item_discount,
        oi.coupon_activity_id as order_item_coupon_activity_id,
        oi.be_share_id as order_item_be_share_id
        from orders os left join order_item oi
        on os.id = oi.order_id
        where
        os.state != 2
        <if test="id!=null">and os.id = #{id}</if>
        <if test="consignee!=null and consignee!=''">and consignee = #{consignee}</if>
    </select>

    <resultMap id="OrdersWithItemMap" type="OrdersPo" autoMapping="true">
        <id property="id" column="id"/>
        <collection property="orderItemPoList" ofType="com.example.exp_2.model.OrderItemPo">
            <id property="id" column="order_item_id"/>
            <result property="goodsSkuId" column="order_item_goods_sku_id"/>
            <result property="orderId" column="order_item_order_id"/>
            <result property="quantity" column="order_item_quantity"/>
            <result property="price" column="order_item_price"/>
            <result property="discount" column="order_item_discount"/>
            <result property="couponActivityId" column="order_item_coupon_activity_id"/>
            <result property="beShareId" column="order_item_be_share_id"/>
        </collection>
    </resultMap>

<!--  以下语句用于测试，打包时记得删掉  -->

    <select id="findOrderItemsTest" parameterType="OrderItemPo" resultType="OrderItemPo">
        select id,
               order_id,
               goods_sku_id,
               quantity,
               price,
               name,
               coupon_activity_id,
               be_share_id,
               gmt_create,
               gmt_modified
        from order_item
        where order_id = #{orderId}
    </select>

    <select id="findOrdersTest" parameterType="OrdersPo" resultType="OrdersPo">
        select
            os.id,
            os.customer_id,
            os.shop_id,
            os.order_sn,
            os.order_type,
            os.state,
            os.substate,
            os.gmt_create,
            os.gmt_modified,
            os.confirm_time,
            os.origin_price,
            os.discount_price,
            os.freight_price,
            os.rebate_num,
            os.message,
            os.region_id,
            os.address,
            os.mobile,
            os.consignee,
            os.coupon_id,
            os.groupon_id,
            os.presale_id,
            os.shipment_sn,
            os.be_deleted
        from orders os
        where os.id = #{id}
    </select>

    <select id="findOrdersWithItemTest" parameterType="OrdersPo" resultMap="OrdersWithItemMapTest">
        select
            os.id as id,
            os.customer_id,
            os.shop_id,
            os.order_sn,
            os.order_type,
            os.state,
            os.substate,
            os.gmt_create,
            os.gmt_modified,
            os.confirm_time,
            os.origin_price,
            os.discount_price,
            os.freight_price,
            os.rebate_num,
            os.message,
            os.region_id,
            os.address,
            os.mobile,
            os.consignee,
            os.coupon_id,
            os.groupon_id,
            os.presale_id,
            os.shipment_sn,
            os.be_deleted,
            oi.id as order_item_id,
            oi.order_id as order_item_order_id,
            oi.goods_sku_id as order_item_goods_sku_id
            from orders os left join order_item oi
            on os.id = oi.order_id
            where os.id = #{id}
    </select>

    <resultMap id="OrdersWithItemMapTest" type="OrdersPo" autoMapping="true">
        <id property="id" column="id"/>
        <collection property="orderItemPoList" ofType="com.example.exp_2.model.OrderItemPo">
            <id property="id" column="order_item_id"/>
            <result property="orderId" column="order_item_order_id"/>
            <result property="goodsSkuId" column="order_item_goods_sku_id"/>
        </collection>
    </resultMap>

</mapper>